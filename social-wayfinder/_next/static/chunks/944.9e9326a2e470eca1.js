"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[944],{944:(t,a,n)=>{async function e(t){return await new Promise(t=>setTimeout(t,300)),t}async function o(t){try{let a="".concat(".").concat(t.startsWith("/")?"":"/").concat(t);console.log("Fetching data from:",a);let n=await fetch(a);if(!n.ok)throw Error("Failed to fetch ".concat(a,": ").concat(n.status," ").concat(n.statusText));return n.json()}catch(a){throw console.error("Error fetching data from ".concat(t,":"),a),a}}async function c(){return console.log("Fetching patient IDs from JSON file"),e(await o("/data/patient_ids.json"))}async function i(t){return(console.log("Fetching timestamps for patient ".concat(t," from JSON file")),1!==t)?e({timestamps:[]}):e(await o("/data/patient_".concat(t,"_timestamps.json")))}async function s(t,a){return(console.log("Fetching notes for patient ".concat(t," from JSON file")),1!==t)?e({notes:[]}):e(await o("/data/patient_".concat(t,"_notes.json")))}async function r(t,a){return(console.log("Fetching summary for patient ".concat(t," from JSON file")),1!==t)?e({summary:{identified_needs:[],summary_date:new Date().toISOString(),overall_status:"No data available for this patient in the static demo"}}):e(await o("/data/patient_".concat(t,"_summary.json")))}n.d(a,{getPatientIds:()=>c,getPatientNotes:()=>s,getPatientSummary:()=>r,getPatientTimestamps:()=>i})}}]);