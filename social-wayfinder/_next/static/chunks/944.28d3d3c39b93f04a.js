"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[944],{944:(t,n,a)=>{async function o(t){return await new Promise(t=>setTimeout(t,300)),t}async function e(t){try{let n=window.location.hostname.includes("github.io")?"/social-wayfinder":"",a="".concat(n).concat(t.startsWith("/")?"":"/").concat(t);console.log("Fetching data from:",a);let o=await fetch(a);if(!o.ok)throw Error("Failed to fetch ".concat(a,": ").concat(o.status," ").concat(o.statusText));return o.json()}catch(n){throw console.error("Error fetching data from ".concat(t,":"),n),n}}async function c(){return console.log("Fetching patient IDs from JSON file"),o(await e("/data/patient_ids.json"))}async function i(t){console.log("Fetching timestamps for patient ".concat(t," from JSON file"));let n=await e("/data/patient_".concat(t,"_timestamps.json"));return console.log("Timestamps data:",n),o(n)}async function s(t,n){return console.log("Fetching notes for patient ".concat(t," from JSON file")),o(await e("/data/patient_".concat(t,"_notes.json")))}async function r(t,n){return console.log("Fetching summary for patient ".concat(t," from JSON file")),o(await e("/data/patient_".concat(t,"_summary.json")))}a.d(n,{getPatientIds:()=>c,getPatientNotes:()=>s,getPatientSummary:()=>r,getPatientTimestamps:()=>i})}}]);